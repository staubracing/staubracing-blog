---
import { getCollection, getEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection('blog', (post) => post.slug !== 'index');
  return posts.map(post => ({
    params: { slug: post.slug }
  }));
}

const { slug } = Astro.params;
const post = await getEntry('blog', slug);

if (!post) {
  throw new Error(`Post not found for slug: ${slug}`);
}

const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <article class="blog-post">
    <header class="post-header">
      <h1 class="post-title">{post.data.title}</h1>
      <p class="post-date"><em>{post.data.date.toLocaleDateString()}</em></p>
    </header>
    <div class="post-content">
      <Content />
    </div>
  </article>
</Layout>

<style>
  .blog-post {
    max-width: 100%;
  }

  .post-header {
    border-bottom: 2px solid #e0e0e0;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
  }

  .post-title {
    color: #2c3e50;
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    line-height: 1.2;
  }

  .post-date {
    color: #7f8c8d;
    font-size: 1rem;
    margin: 0;
  }

  .post-content {
    font-size: 1.1rem;
    line-height: 1.7;
  }

  /* Style the markdown content */
  .post-content :global(h2) {
    color: #34495e;
    font-size: 1.8rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
    border-left: 4px solid #3498db;
    padding-left: 1rem;
  }

  .post-content :global(p) {
    margin-bottom: 1.2rem;
  }

  .post-content :global(strong) {
    color: #2c3e50;
    font-weight: 600;
  }

  .post-content :global(em) {
    color: #7f8c8d;
    font-style: italic;
  }

  /* Style your special formatting */
  .post-content :global(p):has(> strong):first-of-type {
    background-color: #ecf0f1;
    padding: 1rem;
    border-radius: 8px;
    border-left: 4px solid #f39c12;
  }
</style>
