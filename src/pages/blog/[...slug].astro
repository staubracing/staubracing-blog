---
import { getCollection, getEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import MediaDisplay from '../../components/MediaDisplay.astro';
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  // Get all blog posts, including those in subdirectories
  const posts = await getCollection('blog');
  
  // Return the proper slug structure that includes the category path
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { slug } = Astro.params;
const post = await getEntry('blog', slug);

if (!post) {
  throw new Error(`Post not found for slug: ${slug}`);
}

const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <article class="blog-post section-card">
    <header class="post-header">
      <h1 class="post-title">{post.data.title}</h1>
      <p class="post-date"><em>{post.data.date.toLocaleDateString()}</em></p>
    </header>
    <div class="post-content">
      <p>By: {post.data.author}</p>
      {post.data.editor && <p class="editor-credit">Edited by: {post.data.editor}</p>}
      
      {post.data.description && <p class="description">{post.data.description}</p>}
      
      {post.data.featured && <span class="featured-badge">Featured Post!</span>}
      
      {post.data.tags.length > 0 && (
        <div class="tags">
          {post.data.tags.map(tag => <span class="tag">{tag}</span>)}
        </div>
      )}
      
      <Content components={{ MediaDisplay }} />
    </div>
  </article>
</Layout>

<style>
  .post-header {
    display: grid;
    gap: 0.65rem;
    margin-bottom: 2rem;
    padding-bottom: 1.25rem;
    border-bottom: 1px solid rgba(148, 163, 184, 0.2);
  }

  .post-title {
    font-size: clamp(2.2rem, 4vw, 3rem);
    letter-spacing: 0.04em;
    line-height: 1.15;
  }

  .post-date {
    font-size: 0.95rem;
    color: var(--text-secondary);
    letter-spacing: 0.08em;
    text-transform: uppercase;
  }

  .post-content {
    font-size: 1.05rem;
    line-height: 1.75;
    display: grid;
    gap: 1.25rem;
  }

  .post-content > p {
    margin: 0;
  }

  .editor-credit {
    font-size: 0.95rem;
    color: var(--text-secondary);
    font-style: italic;
    opacity: 0.85;
  }

  .featured-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.35rem 0.85rem;
    border-radius: 999px;
    border: 1px solid rgba(250, 204, 21, 0.4);
    background: rgba(250, 204, 21, 0.15);
    color: #fde68a;
    font-size: 0.8rem;
    letter-spacing: 0.06em;
    text-transform: uppercase;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    padding: 0.35rem 0.75rem;
    border-radius: 999px;
    border: 1px solid rgba(148, 163, 184, 0.25);
    background: rgba(15, 23, 42, 0.55);
    font-size: 0.75rem;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    color: var(--text-secondary);
  }

  /* Markdown content styling */
  .post-content :global(h2),
  .post-content :global(h3) {
    color: var(--text-primary);
    font-family: var(--brand-font);
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    position: relative;
  }

  .post-content :global(h2)::after,
  .post-content :global(h3)::after {
    content: "";
    position: absolute;
    bottom: -0.5rem;
    left: 0;
    width: 160px;
    height: 2px;
    background: linear-gradient(90deg, rgba(26, 135, 84, 0.8), rgba(56, 189, 248, 0.6));
  }

  .post-content :global(p) {
    margin: 0 0 1.4rem;
    color: var(--text-secondary);
  }

  .post-content :global(strong) {
    color: #f8fafc;
    font-weight: 600;
  }

  /* Style your special formatting */
  .post-content :global(p):has(> strong):first-of-type {
    background: rgba(250, 204, 21, 0.08);
    padding: 1.25rem;
    border-radius: var(--radius-md);
    border-left: 4px solid rgba(250, 204, 21, 0.75);
    color: #fde68a;
  }

  .post-content :global(blockquote) {
    margin: 1.5rem 0;
    padding: 1.2rem 1.5rem;
    border-left: 4px solid rgba(56, 189, 248, 0.6);
    background: rgba(56, 189, 248, 0.08);
    border-radius: var(--radius-md);
    color: #e0f2fe;
  }

  .post-content :global(code) {
    font-family: 'JetBrains Mono', 'Fira Code', monospace;
    background: rgba(15, 23, 42, 0.8);
    border: 1px solid rgba(148, 163, 184, 0.25);
    border-radius: 6px;
    padding: 0.15rem 0.4rem;
    color: #f8fafc;
  }

  .post-content :global(pre) {
    background: rgba(15, 23, 42, 0.75);
    border: 1px solid rgba(148, 163, 184, 0.22);
    border-radius: var(--radius-md);
    padding: 1.25rem;
    overflow-x: auto;
    box-shadow: var(--shadow-soft);
  }
</style>
