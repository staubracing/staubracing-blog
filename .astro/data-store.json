[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.14.1","content-config-digest","579cccf3f79533d2","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://blog.staubracing.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false,\"failOnPrerenderConflict\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,31,32,63,64,135,136,225,226],"racing/zx6r-engine-rebuild-part2",{"id":11,"data":13,"body":27,"filePath":28,"digest":29,"legacyId":30,"deferredRender":23},{"title":14,"date":15,"description":16,"tags":17,"author":22,"featured":23,"category":24,"series":25,"draft":26},"ZX6R Engine Rebuild - Part 2: The Damage Revealed",["Date","2025-06-26T00:00:00.000Z"],"With the engine torn down, I finally saw the damage—and it wasn't pretty",[18,19,20,21],"motorcycle","engine","rebuild","zx6r","StaubRacing",true,"racing","ZX6R Engine Rebuild",false,"In [Part 1](https://blog.staubracing.com/racing/zx6r-engine-rebuild-part1/), I walked through how a subtle rattle at the track led me to drop the motor on my ZX6R. In this post, I'll show you exactly what we found once the engine came apart—and what needs fixing.\n\nThe damage on cylinder #4 wasn't subtle. You could clearly see vertical scoring on both the front and rear sides of the bore, along with a polished section where the piston had been making contact. Since these are **Nikasil-coated cylinders**, this kind of damage isn't something you can just hone out. The coating is extremely hard but very thin—once it's compromised, your options are limited to either re-plating or replacement.\n\n\u003CMediaDisplay \n  src=\"/images/blog/racing/zx6r-engine-rebuild/scoring-on-cylinder-1.jpg\" \n  alt=\"Scoring on Cylinder #4\" \n  caption=\"Vertical scoring visible on both sides of cylinder #4 bore, with polished sections where piston contact occurred and the piston had been rubbing against the bore. Which deposited aluminum on the bore.\"\n/>\n\nSeeing this was a double-edged moment. I was relieved to have found the cause of the noise—it wasn't in my head—but also bummed to be staring at real damage. I had no idea what the total cost would be or how deep this rebuild might go. But I was committed now. The engine was open, and there was no turning back. I was going to rebuild this engine! I was going to get it back to the track and race it!\n\n\u003CMediaDisplay \n  src=\"/images/blog/racing/zx6r-engine-rebuild/clip-piston-slap.mp4\" \n  type=\"video\"\n  width=\"640px\"\n  caption=\"Once we got the head off and I could access the top of the piston, I could see what was causing the knocking noise. The piston was rubbing against the bore and the bore was scoring. This is what caused the knocking noise.\"\n/>\n\nOver the next few weeks, I chipped away at the teardown in stages. I started removing the external components: the starter, oil pump, radiator hoses going to the oil cooler, and the oil pan to drain everything and expose the lower end of the engine.\n\n\u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-parts.jpg\" alt=\"Test Image\" />\n\nWhen it came time to split the crankcase, I verified the proper bolt removal sequence using the service manual. These engines are tough, but skipping steps can cause warping or future sealing issues.\n\nAfter getting all the bolts out, I split the case and finally exposed the crankshaft and connecting rod end caps.\n\n\u003CMediaDisplay \n  src=\"/images/blog/racing/zx6r-engine-rebuild/engine-cases-split.png\" \n  alt=\"Cases Split Open\" \n  caption=\"Crankcase halves separated, revealing the crankshaft and connecting rod assemblies\"\n/>\n\nWith the cases apart, I removed the rod caps and slid out the rod bearings. Then I carefully pulled the crankshaft and inspected the main bearings underneath.\n\n\u003CMediaDisplay \n  src=\"/images/blog/racing/zx6r-engine-rebuild/engineout-1.jpg\" \n  alt=\"Engine Removed from Frame\" \n  caption=\"Engine removed from frame for complete disassembly and inspection\"\n/>\n\nSurprisingly, they looked good—no major scoring, no heat discoloration, and no embedded debris. That was a bit of good news. It meant the bottom end likely wasn't completely wrecked. The damage looked isolated to the top end and that #4 cylinder.\n\nThe piston from cylinder #4 confirmed this theory. It had significant damage along the sides, especially where it had been rocking in the bore. That rocking motion—called **piston slap**—is what likely caused the polished sections and scoring on the cylinder wall.\n\nPiston slap happens when there's too much clearance between the piston and cylinder wall, often due to wear or heat. Instead of moving straight up and down, the piston rocks slightly with each stroke. Over time, this repeated contact transfers aluminum from the piston onto the cylinder wall.\n\n\u003CMediaDisplay \n  src=\"/images/blog/racing/zx6r-engine-rebuild/engine-scroing.jpg\" \n  alt=\"Engine Cylinder Scoring\" \n  caption=\"Close-up view of cylinder scoring damage from piston slap\"\n/>\n\nSince this is a Nikasil surface, aluminum transfer like this can't just be honed out. It either needs to be chemically cleaned—there's an acid method I want to try—or fully re-plated by a machine shop.\n\n---\n\n🔧 **Next Up**: I'll be exploring cleaning options, talking to machine shops, and planning the repair path forward. I'll share what I learn in Part 3.","src/content/blog/racing/zx6r-engine-rebuild-part2.mdx","21fe9f3b53b975b5","racing/zx6r-engine-rebuild-part2.mdx","racing/zx6r-engine-rebuild-part1",{"id":31,"data":33,"body":38,"filePath":39,"digest":40,"rendered":41,"legacyId":62},{"title":34,"date":35,"description":36,"tags":37,"author":22,"featured":23,"category":24,"series":25,"draft":26},"ZX6R Engine Rebuild - Part 1: From Trackside Trouble to Engine Pull",["Date","2025-06-17T00:00:00.000Z"],"My adventure rebuilding a motorcycle engine after mysterious knocking",[18,19,20,21],"## 🧠 Why I'm Writing This\n\nI bought a 2009 ZX6R in the summer of 2023, excited to race it all season and hopefully shave some time off my laps. Unfortunately, during the third round of the season—only my second race with the bike—the engine started making a knocking noise during Saturday morning practice.\n\n\u003Cdiv style=\"text-align: center; margin: 2rem 0;\">\n  \u003Cimg \n    src=\"/images/blog/racing/zx6r-engine-rebuild/zx6r-track-day.jpg\" \n    alt=\"My ZX6R at the track before the engine issues\" \n    style=\"max-width: 100%; height: auto; border: 3px solid #e0e0e0; border-radius: 12px; transition: transform 0.3s ease, box-shadow 0.3s ease;\" \n    onmouseover=\"this.style.transform='scale(1.02)'; this.style.boxShadow='0 8px 25px rgba(0,0,0,0.2)'\"\n    onmouseout=\"this.style.transform='scale(1)'; this.style.boxShadow='none'\"\n  />\n\u003C/div>\n\nRight away, I pitted and started trying to figure out what was going on. I fired the bike back up and listened carefully. The noise sounded like a rattle—subtle, but definitely not normal. A few people came over to listen and tossed around their guesses, everything from cam chain rattle to a spun rod bearing. At that point, I knew I had a real problem on my hands, and racing that weekend was off the table.\n\nI'm writing this to share my experience taking on this project—and hopefully motivate someone else to find the confidence to do the same.\n\n## 💬 What Happened / What I Learned\n\nI started with some high-level troubleshooting to figure out what the noise was and where it was coming from. The sound was definitely coming from the right side of the engine, which led me to believe it might be a cam chain issue.\n\nA few people at the track were convinced it was a main rod bearing. But by using the old screwdriver-to-the-ear trick—the classic \"poor man's stethoscope\"—I was able to narrow the noise down to the #4 cylinder area, right around where the cam chain sits.\n\n🛠️ **Digging in:** I started by removing the fairings, gas tank, and airbox to gain access to the valve cover. My thought was: let's verify the cam chain and check the valve clearances. This bike has an automatic cam chain tensioner, and I wanted to properly remove and inspect it. I also have a manual tensioner that will fit, so that was one of the first troubleshooting steps I wanted to try at this stage.\n\n🛠️ **Initial findings:** The cam chain tensioner looked fine, and the chain itself was tight and in good condition. I checked the valve clearances, and everything was within spec. So at this point, I was confident the issue wasn't coming from the cam chain or valve train.\n\n🔧 **Time to go deeper:** With the cam chain, tensioner, and valve clearances all checking out, I was running out of options—and getting a little frustrated. I had hoped it would be something simple, but the noise wasn't going away, and I didn't want to risk making things worse by running it again. At that point, I knew what I had to do: pull the engine and dig in for real.\n\n🧰 **Let's drop it:** I had my friend Joe come over, and we began the process of dropping the engine. Before we could even get to that point, though, we had to remove the fairings, gas tank, and airbox again to fully expose the engine and free up space to work. I took a ton of pictures along the way—especially of the wiring, hoses, and mounting points—since I knew I'd need good documentation for the reassembly later.\n\n\u003Cdiv style=\"text-align: center; margin: 2rem 0;\">\n  \u003Cimg \n    src=\"/images/blog/racing/zx6r-engine-rebuild/drop-prep.jpg\" \n    alt=\"My ZX6R at the track before the engine issues\" \n    style=\"max-width: 100%; height: auto; border: 3px solid #e0e0e0; border-radius: 12px; transition: transform 0.3s ease, box-shadow 0.3s ease;\" \n    onmouseover=\"this.style.transform='scale(1.02)'; this.style.boxShadow='0 8px 25px rgba(0,0,0,0.2)'\"\n    onmouseout=\"this.style.transform='scale(1)'; this.style.boxShadow='none'\"\n  />\n\u003C/div>\n\n### 📸 Engine Removal Process\n\n\u003Cdiv style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin: 2rem 0;\">\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-drop.jpg\" alt=\"Engine removal step 1\" />\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-removal-2.jpg\" alt=\"Engine removal step 2\" />\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-removal-3.jpg\" alt=\"Engine removal step 3\" />\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-removal-4.jpg\" alt=\"Engine removal step 4\" />\n\u003C/div>\n\nThe engine removal itself went smoothly. Once it was out, we set it aside and got to work. We removed the valve cover, pulled the camshafts, and carefully removed the valve buckets along with the shims. When it came time to remove the cylinder head, I made sure to loosen the bolts in the correct sequence to avoid warping it. Taking the time to follow the proper order was critical—and something I didn't want to rush or guess on.\n\n![Engine on the workbench ready for disassembly](/images/blog/racing/zx6r-engine-rebuild/engine-workbench.jpg)\n\nWith all the bolts removed, we gently tapped the head to break it free. As we lifted it off, we almost immediately saw the issue. Yup—there it was. Everything suddenly made a lot more sense.\n\n**To be continued in Part 2...**  \n🕵️ In Part 2, I'll walk through what we found once the head came off—including the exact damage and what it'll take to fix it.","src/content/blog/racing/zx6r-engine-rebuild-part1.md","03878817e8e6b5f4",{"html":42,"metadata":43},"\u003Ch2 id=\"-why-im-writing-this\">🧠 Why I’m Writing This\u003C/h2>\n\u003Cp>I bought a 2009 ZX6R in the summer of 2023, excited to race it all season and hopefully shave some time off my laps. Unfortunately, during the third round of the season—only my second race with the bike—the engine started making a knocking noise during Saturday morning practice.\u003C/p>\n\u003Cdiv style=\"text-align: center; margin: 2rem 0;\">\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/zx6r-track-day.jpg\" alt=\"My ZX6R at the track before the engine issues\" style=\"max-width: 100%; height: auto; border: 3px solid #e0e0e0; border-radius: 12px; transition: transform 0.3s ease, box-shadow 0.3s ease;\" onmouseover=\"this.style.transform=&#x27;scale(1.02)&#x27;; this.style.boxShadow=&#x27;0 8px 25px rgba(0,0,0,0.2)&#x27;\" onmouseout=\"this.style.transform=&#x27;scale(1)&#x27;; this.style.boxShadow=&#x27;none&#x27;\">\n\u003C/div>\n\u003Cp>Right away, I pitted and started trying to figure out what was going on. I fired the bike back up and listened carefully. The noise sounded like a rattle—subtle, but definitely not normal. A few people came over to listen and tossed around their guesses, everything from cam chain rattle to a spun rod bearing. At that point, I knew I had a real problem on my hands, and racing that weekend was off the table.\u003C/p>\n\u003Cp>I’m writing this to share my experience taking on this project—and hopefully motivate someone else to find the confidence to do the same.\u003C/p>\n\u003Ch2 id=\"-what-happened--what-i-learned\">💬 What Happened / What I Learned\u003C/h2>\n\u003Cp>I started with some high-level troubleshooting to figure out what the noise was and where it was coming from. The sound was definitely coming from the right side of the engine, which led me to believe it might be a cam chain issue.\u003C/p>\n\u003Cp>A few people at the track were convinced it was a main rod bearing. But by using the old screwdriver-to-the-ear trick—the classic “poor man’s stethoscope”—I was able to narrow the noise down to the #4 cylinder area, right around where the cam chain sits.\u003C/p>\n\u003Cp>🛠️ \u003Cstrong>Digging in:\u003C/strong> I started by removing the fairings, gas tank, and airbox to gain access to the valve cover. My thought was: let’s verify the cam chain and check the valve clearances. This bike has an automatic cam chain tensioner, and I wanted to properly remove and inspect it. I also have a manual tensioner that will fit, so that was one of the first troubleshooting steps I wanted to try at this stage.\u003C/p>\n\u003Cp>🛠️ \u003Cstrong>Initial findings:\u003C/strong> The cam chain tensioner looked fine, and the chain itself was tight and in good condition. I checked the valve clearances, and everything was within spec. So at this point, I was confident the issue wasn’t coming from the cam chain or valve train.\u003C/p>\n\u003Cp>🔧 \u003Cstrong>Time to go deeper:\u003C/strong> With the cam chain, tensioner, and valve clearances all checking out, I was running out of options—and getting a little frustrated. I had hoped it would be something simple, but the noise wasn’t going away, and I didn’t want to risk making things worse by running it again. At that point, I knew what I had to do: pull the engine and dig in for real.\u003C/p>\n\u003Cp>🧰 \u003Cstrong>Let’s drop it:\u003C/strong> I had my friend Joe come over, and we began the process of dropping the engine. Before we could even get to that point, though, we had to remove the fairings, gas tank, and airbox again to fully expose the engine and free up space to work. I took a ton of pictures along the way—especially of the wiring, hoses, and mounting points—since I knew I’d need good documentation for the reassembly later.\u003C/p>\n\u003Cdiv style=\"text-align: center; margin: 2rem 0;\">\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/drop-prep.jpg\" alt=\"My ZX6R at the track before the engine issues\" style=\"max-width: 100%; height: auto; border: 3px solid #e0e0e0; border-radius: 12px; transition: transform 0.3s ease, box-shadow 0.3s ease;\" onmouseover=\"this.style.transform=&#x27;scale(1.02)&#x27;; this.style.boxShadow=&#x27;0 8px 25px rgba(0,0,0,0.2)&#x27;\" onmouseout=\"this.style.transform=&#x27;scale(1)&#x27;; this.style.boxShadow=&#x27;none&#x27;\">\n\u003C/div>\n\u003Ch3 id=\"-engine-removal-process\">📸 Engine Removal Process\u003C/h3>\n\u003Cdiv style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin: 2rem 0;\">\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-drop.jpg\" alt=\"Engine removal step 1\">\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-removal-2.jpg\" alt=\"Engine removal step 2\">\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-removal-3.jpg\" alt=\"Engine removal step 3\">\n  \u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-removal-4.jpg\" alt=\"Engine removal step 4\">\n\u003C/div>\n\u003Cp>The engine removal itself went smoothly. Once it was out, we set it aside and got to work. We removed the valve cover, pulled the camshafts, and carefully removed the valve buckets along with the shims. When it came time to remove the cylinder head, I made sure to loosen the bolts in the correct sequence to avoid warping it. Taking the time to follow the proper order was critical—and something I didn’t want to rush or guess on.\u003C/p>\n\u003Cp>\u003Cimg src=\"/images/blog/racing/zx6r-engine-rebuild/engine-workbench.jpg\" alt=\"Engine on the workbench ready for disassembly\">\u003C/p>\n\u003Cp>With all the bolts removed, we gently tapped the head to break it free. As we lifted it off, we almost immediately saw the issue. Yup—there it was. Everything suddenly made a lot more sense.\u003C/p>\n\u003Cp>\u003Cstrong>To be continued in Part 2…\u003C/strong>\u003Cbr>\n🕵️ In Part 2, I’ll walk through what we found once the head came off—including the exact damage and what it’ll take to fix it.\u003C/p>",{"headings":44,"localImagePaths":56,"remoteImagePaths":57,"frontmatter":58,"imagePaths":61},[45,49,52],{"depth":46,"slug":47,"text":48},2,"-why-im-writing-this","🧠 Why I’m Writing This",{"depth":46,"slug":50,"text":51},"-what-happened--what-i-learned","💬 What Happened / What I Learned",{"depth":53,"slug":54,"text":55},3,"-engine-removal-process","📸 Engine Removal Process",[],[],{"title":34,"date":59,"description":36,"tags":60,"author":22,"featured":23,"category":24,"series":25},["Date","2025-06-17T00:00:00.000Z"],[18,19,20,21],[],"racing/zx6r-engine-rebuild-part1.md","projects/raspberry-pi-home-server",{"id":63,"data":65,"body":76,"filePath":77,"digest":78,"rendered":79,"legacyId":134},{"title":66,"date":67,"description":68,"tags":69,"author":22,"featured":26,"category":75,"draft":26},"Building a Raspberry Pi Home Server: From Zero to Hero",["Date","2025-06-15T00:00:00.000Z"],"How I turned a $50 Raspberry Pi into a powerful home server for media, backups, and automation",[70,71,72,73,74],"raspberry-pi","home-server","linux","automation","self-hosted","projects","## 🎯 Why Build a Home Server?\n\nAfter years of relying on cloud services for everything, I decided it was time to take back control of my digital life. Between privacy concerns, recurring subscription costs, and the desire to learn more about Linux administration, building a home server became the perfect project.\n\n## 🛠️ The Hardware Setup\n\nI started with a **Raspberry Pi 4 Model B** (8GB RAM) - the perfect balance of power and affordability. Here's what I paired it with:\n\n- **Storage**: 1TB Samsung T7 SSD (external)\n- **Power**: Official Raspberry Pi power supply\n- **Case**: Flirc aluminum case for passive cooling\n- **Network**: Gigabit Ethernet connection\n\n## 🐧 Operating System Choice\n\nI went with **Ubuntu Server 22.04 LTS** instead of Raspberry Pi OS. Here's why:\n\n- **Better package support** for server applications\n- **Longer support cycle** (5 years vs 2 years)\n- **More familiar** for someone coming from desktop Ubuntu\n- **Better Docker support**\n\n## 📦 Essential Services I'm Running\n\n### 1. **Plex Media Server**\n\n- Streams my movie/TV collection to any device\n- Automatic metadata fetching\n- Hardware transcoding (limited on Pi, but works for 1080p)\n\n### 2. **Nextcloud**\n\n- Personal cloud storage replacement\n- File sync across all devices\n- Calendar and contact sync\n\n### 3. **Pi-hole**\n\n- Network-wide ad blocking\n- DNS server for the entire home network\n- Beautiful web interface for monitoring\n\n### 4. **Home Assistant**\n\n- Smart home automation hub\n- Integrates with all my IoT devices\n- Custom automations for daily routines\n\n## 🔧 Configuration Highlights\n\n### Docker Setup\n\n```bash\n# Install Docker\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n\n# Add user to docker group\nsudo usermod -aG docker $USER\n```\n\n### Automatic Backups\n\nI set up a cron job that creates daily snapshots of my Nextcloud data and syncs them to an external drive.\n\n### Network Configuration\n\n- Static IP assignment\n- Port forwarding for external access\n- SSL certificates with Let's Encrypt\n\n## 💡 Lessons Learned\n\n1. **Start Simple**: Don't try to run everything at once. Add services gradually.\n2. **Backup Everything**: RAID isn't backup. Have multiple backup strategies.\n3. **Monitor Resources**: The Pi has limits. Keep an eye on CPU, RAM, and storage.\n4. **Security First**: Change default passwords, use SSH keys, keep systems updated.\n\n## 🚀 Performance Results\n\nFor a $50 computer, I'm amazed at what this little Pi can handle:\n\n- **Plex**: Streams 1080p content to 2-3 devices simultaneously\n- **Nextcloud**: Handles file sync for 3 users without breaking a sweat\n- **Pi-hole**: Blocks ~30% of DNS requests (ads/tracking)\n- **Home Assistant**: Manages 15+ smart devices with complex automations\n\n## 🔮 Future Plans\n\n- Add a second Pi for redundancy\n- Implement automated backup verification\n- Set up a reverse proxy for better SSL management\n- Add monitoring with Grafana/Prometheus\n\nThe Raspberry Pi home server has been one of my most rewarding projects. It's taught me so much about Linux administration, networking, and self-hosting. Plus, it's saved me hundreds in subscription fees while giving me complete control over my data.\n\n**Total cost**: ~$150  \n**Monthly savings**: ~$25  \n**Knowledge gained**: Priceless","src/content/blog/projects/raspberry-pi-home-server.md","dcb7bd53914a0495",{"html":80,"metadata":81},"\u003Ch2 id=\"-why-build-a-home-server\">🎯 Why Build a Home Server?\u003C/h2>\n\u003Cp>After years of relying on cloud services for everything, I decided it was time to take back control of my digital life. Between privacy concerns, recurring subscription costs, and the desire to learn more about Linux administration, building a home server became the perfect project.\u003C/p>\n\u003Ch2 id=\"️-the-hardware-setup\">🛠️ The Hardware Setup\u003C/h2>\n\u003Cp>I started with a \u003Cstrong>Raspberry Pi 4 Model B\u003C/strong> (8GB RAM) - the perfect balance of power and affordability. Here’s what I paired it with:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Storage\u003C/strong>: 1TB Samsung T7 SSD (external)\u003C/li>\n\u003Cli>\u003Cstrong>Power\u003C/strong>: Official Raspberry Pi power supply\u003C/li>\n\u003Cli>\u003Cstrong>Case\u003C/strong>: Flirc aluminum case for passive cooling\u003C/li>\n\u003Cli>\u003Cstrong>Network\u003C/strong>: Gigabit Ethernet connection\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"-operating-system-choice\">🐧 Operating System Choice\u003C/h2>\n\u003Cp>I went with \u003Cstrong>Ubuntu Server 22.04 LTS\u003C/strong> instead of Raspberry Pi OS. Here’s why:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Better package support\u003C/strong> for server applications\u003C/li>\n\u003Cli>\u003Cstrong>Longer support cycle\u003C/strong> (5 years vs 2 years)\u003C/li>\n\u003Cli>\u003Cstrong>More familiar\u003C/strong> for someone coming from desktop Ubuntu\u003C/li>\n\u003Cli>\u003Cstrong>Better Docker support\u003C/strong>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"-essential-services-im-running\">📦 Essential Services I’m Running\u003C/h2>\n\u003Ch3 id=\"1-plex-media-server\">1. \u003Cstrong>Plex Media Server\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>Streams my movie/TV collection to any device\u003C/li>\n\u003Cli>Automatic metadata fetching\u003C/li>\n\u003Cli>Hardware transcoding (limited on Pi, but works for 1080p)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-nextcloud\">2. \u003Cstrong>Nextcloud\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>Personal cloud storage replacement\u003C/li>\n\u003Cli>File sync across all devices\u003C/li>\n\u003Cli>Calendar and contact sync\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-pi-hole\">3. \u003Cstrong>Pi-hole\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>Network-wide ad blocking\u003C/li>\n\u003Cli>DNS server for the entire home network\u003C/li>\n\u003Cli>Beautiful web interface for monitoring\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-home-assistant\">4. \u003Cstrong>Home Assistant\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>Smart home automation hub\u003C/li>\n\u003Cli>Integrates with all my IoT devices\u003C/li>\n\u003Cli>Custom automations for daily routines\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"-configuration-highlights\">🔧 Configuration Highlights\u003C/h2>\n\u003Ch3 id=\"docker-setup\">Docker Setup\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Install Docker\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">curl\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -fsSL\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> https://get.docker.com\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -o\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> get-docker.sh\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sh\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> get-docker.sh\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Add user to docker group\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sudo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> usermod\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -aG\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> docker\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $USER\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"automatic-backups\">Automatic Backups\u003C/h3>\n\u003Cp>I set up a cron job that creates daily snapshots of my Nextcloud data and syncs them to an external drive.\u003C/p>\n\u003Ch3 id=\"network-configuration\">Network Configuration\u003C/h3>\n\u003Cul>\n\u003Cli>Static IP assignment\u003C/li>\n\u003Cli>Port forwarding for external access\u003C/li>\n\u003Cli>SSL certificates with Let’s Encrypt\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"-lessons-learned\">💡 Lessons Learned\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>Start Simple\u003C/strong>: Don’t try to run everything at once. Add services gradually.\u003C/li>\n\u003Cli>\u003Cstrong>Backup Everything\u003C/strong>: RAID isn’t backup. Have multiple backup strategies.\u003C/li>\n\u003Cli>\u003Cstrong>Monitor Resources\u003C/strong>: The Pi has limits. Keep an eye on CPU, RAM, and storage.\u003C/li>\n\u003Cli>\u003Cstrong>Security First\u003C/strong>: Change default passwords, use SSH keys, keep systems updated.\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"-performance-results\">🚀 Performance Results\u003C/h2>\n\u003Cp>For a $50 computer, I’m amazed at what this little Pi can handle:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Plex\u003C/strong>: Streams 1080p content to 2-3 devices simultaneously\u003C/li>\n\u003Cli>\u003Cstrong>Nextcloud\u003C/strong>: Handles file sync for 3 users without breaking a sweat\u003C/li>\n\u003Cli>\u003Cstrong>Pi-hole\u003C/strong>: Blocks ~30% of DNS requests (ads/tracking)\u003C/li>\n\u003Cli>\u003Cstrong>Home Assistant\u003C/strong>: Manages 15+ smart devices with complex automations\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"-future-plans\">🔮 Future Plans\u003C/h2>\n\u003Cul>\n\u003Cli>Add a second Pi for redundancy\u003C/li>\n\u003Cli>Implement automated backup verification\u003C/li>\n\u003Cli>Set up a reverse proxy for better SSL management\u003C/li>\n\u003Cli>Add monitoring with Grafana/Prometheus\u003C/li>\n\u003C/ul>\n\u003Cp>The Raspberry Pi home server has been one of my most rewarding projects. It’s taught me so much about Linux administration, networking, and self-hosting. Plus, it’s saved me hundreds in subscription fees while giving me complete control over my data.\u003C/p>\n\u003Cp>\u003Cstrong>Total cost\u003C/strong>: ~$150\u003Cbr>\n\u003Cstrong>Monthly savings\u003C/strong>: ~$25\u003Cbr>\n\u003Cstrong>Knowledge gained\u003C/strong>: Priceless\u003C/p>",{"headings":82,"localImagePaths":128,"remoteImagePaths":129,"frontmatter":130,"imagePaths":133},[83,86,89,92,95,98,101,104,107,110,113,116,119,122,125],{"depth":46,"slug":84,"text":85},"-why-build-a-home-server","🎯 Why Build a Home Server?",{"depth":46,"slug":87,"text":88},"️-the-hardware-setup","🛠️ The Hardware Setup",{"depth":46,"slug":90,"text":91},"-operating-system-choice","🐧 Operating System Choice",{"depth":46,"slug":93,"text":94},"-essential-services-im-running","📦 Essential Services I’m Running",{"depth":53,"slug":96,"text":97},"1-plex-media-server","1. Plex Media Server",{"depth":53,"slug":99,"text":100},"2-nextcloud","2. Nextcloud",{"depth":53,"slug":102,"text":103},"3-pi-hole","3. Pi-hole",{"depth":53,"slug":105,"text":106},"4-home-assistant","4. Home Assistant",{"depth":46,"slug":108,"text":109},"-configuration-highlights","🔧 Configuration Highlights",{"depth":53,"slug":111,"text":112},"docker-setup","Docker Setup",{"depth":53,"slug":114,"text":115},"automatic-backups","Automatic Backups",{"depth":53,"slug":117,"text":118},"network-configuration","Network Configuration",{"depth":46,"slug":120,"text":121},"-lessons-learned","💡 Lessons Learned",{"depth":46,"slug":123,"text":124},"-performance-results","🚀 Performance Results",{"depth":46,"slug":126,"text":127},"-future-plans","🔮 Future Plans",[],[],{"title":66,"date":131,"description":68,"tags":132,"author":22,"featured":26,"category":75},["Date","2025-06-15T00:00:00.000Z"],[70,71,72,73,74],[],"projects/raspberry-pi-home-server.md","code/learning-typescript-in-2025",{"id":135,"data":137,"body":148,"filePath":149,"digest":150,"rendered":151,"legacyId":224},{"title":138,"date":139,"description":140,"tags":141,"author":22,"featured":23,"category":147,"draft":26},"Learning TypeScript in 2025: A Developer's Journey",["Date","2025-06-10T00:00:00.000Z"],"My experience transitioning from JavaScript to TypeScript and why it's worth the effort",[142,143,144,145,146],"typescript","javascript","programming","learning","web-development","code","## 🎯 Why TypeScript?\n\nAfter years of writing JavaScript, I finally decided to dive into TypeScript. The tipping point came when I was debugging a complex React component and spent hours tracking down a bug that would have been caught immediately with proper typing.\n\n## 🚀 The Learning Curve\n\n### Week 1: Basic Types\n\nStarted with the fundamentals - strings, numbers, booleans, arrays. The syntax felt familiar but the mental model took some getting used to.\n\n```typescript\n// JavaScript way\nfunction greet(name) {\n  return `Hello, ${name}!`;\n}\n\n// TypeScript way\nfunction greet(name: string): string {\n  return `Hello, ${name}!`;\n}\n```\n\n### Week 2: Interfaces and Types\n\nThis is where TypeScript really started to shine. Creating interfaces for my data structures made my code so much more readable and maintainable.\n\n```typescript\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  isActive: boolean;\n}\n\nfunction createUser(userData: User): User {\n  // TypeScript ensures I handle all required properties\n  return {\n    id: userData.id,\n    name: userData.name,\n    email: userData.email,\n    isActive: userData.isActive,\n  };\n}\n```\n\n### Week 3: Generics\n\nThis was the hardest concept to wrap my head around, but once I got it, it opened up a whole new world of possibilities.\n\n```typescript\nfunction createArray\u003CT>(length: number, value: T): T[] {\n  return Array(length).fill(value);\n}\n\n// Usage\nconst stringArray = createArray\u003Cstring>(3, \"hello\");\nconst numberArray = createArray\u003Cnumber>(5, 42);\n```\n\n## 💡 Key Benefits I've Discovered\n\n### 1. **Better IDE Support**\n\n- Autocomplete that actually works\n- Refactoring tools that don't break things\n- Real-time error detection\n\n### 2. **Self-Documenting Code**\n\n- Function signatures tell you exactly what they expect\n- No more guessing what properties an object has\n- Clear contracts between components\n\n### 3. **Catch Bugs Early**\n\n- Type errors at compile time instead of runtime\n- Prevents common mistakes like typos in property names\n- Ensures API contracts are followed\n\n### 4. **Better Refactoring**\n\n- Rename a property and TypeScript shows you everywhere it needs to be updated\n- Change a function signature and get immediate feedback on all callers\n- Confidence to make big changes without breaking things\n\n## 🛠️ Practical Tips for Beginners\n\n### 1. **Start Small**\n\nDon't try to convert your entire codebase at once. Start with new files or small modules.\n\n### 2. **Use `any` Sparingly**\n\nIt's tempting to use `any` to bypass type errors, but it defeats the purpose. Use `unknown` instead when you're not sure of the type.\n\n### 3. **Leverage Type Inference**\n\nTypeScript is smart enough to infer many types automatically. Don't over-annotate.\n\n```typescript\n// Let TypeScript infer the return type\nfunction add(a: number, b: number) {\n  return a + b; // TypeScript knows this returns number\n}\n```\n\n### 4. **Use Utility Types**\n\nTypeScript provides powerful utility types that can save you a lot of time:\n\n```typescript\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n}\n\n// Create a type without the password field\ntype PublicUser = Omit\u003CUser, \"password\">;\n\n// Make all properties optional\ntype PartialUser = Partial\u003CUser>;\n```\n\n## 🔧 Integration with Existing Projects\n\n### Gradual Migration Strategy\n\n1. **Enable TypeScript** with `allowJs: true` in `tsconfig.json`\n2. **Rename files** from `.js` to `.ts` one at a time\n3. **Add type annotations** incrementally\n4. **Use JSDoc comments** for existing JavaScript files\n\n### Configuration Tips\n\n```json\n{\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"noImplicitAny\": true,\n    \"strictNullChecks\": true,\n    \"allowJs\": true,\n    \"checkJs\": true\n  }\n}\n```\n\n## 🎉 Results After 3 Months\n\n- **Bug reduction**: ~70% fewer runtime errors\n- **Development speed**: Faster once I got used to the workflow\n- **Code confidence**: Much more comfortable making changes\n- **Team collaboration**: Easier to understand other people's code\n\n## 🚀 Next Steps\n\nI'm now exploring:\n\n- **Advanced TypeScript patterns** like conditional types\n- **Framework integration** with React, Vue, and Node.js\n- **Performance optimization** techniques\n- **Testing strategies** with typed test utilities\n\n## 💭 Final Thoughts\n\nLearning TypeScript has been one of the best decisions I've made for my development career. The initial learning curve was steep, but the long-term benefits are enormous. It's not just about catching bugs - it's about writing better, more maintainable code.\n\n**If you're on the fence about TypeScript, just start. You won't regret it.**\n\nThe investment in learning TypeScript pays dividends every day I write code. It's like having a super-smart pair programming partner that never gets tired and catches all the mistakes I might miss.","src/content/blog/code/learning-typescript-in-2025.md","1095c820cbca0474",{"html":152,"metadata":153},"\u003Ch2 id=\"-why-typescript\">🎯 Why TypeScript?\u003C/h2>\n\u003Cp>After years of writing JavaScript, I finally decided to dive into TypeScript. The tipping point came when I was debugging a complex React component and spent hours tracking down a bug that would have been caught immediately with proper typing.\u003C/p>\n\u003Ch2 id=\"-the-learning-curve\">🚀 The Learning Curve\u003C/h2>\n\u003Ch3 id=\"week-1-basic-types\">Week 1: Basic Types\u003C/h3>\n\u003Cp>Started with the fundamentals - strings, numbers, booleans, arrays. The syntax felt familiar but the mental model took some getting used to.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// JavaScript way\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> greet\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> `Hello, ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}!`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// TypeScript way\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> greet\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">name\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> `Hello, ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}!`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"week-2-interfaces-and-types\">Week 2: Interfaces and Types\u003C/h3>\n\u003Cp>This is where TypeScript really started to shine. Creating interfaces for my data structures made my code so much more readable and maintainable.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">interface\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  id\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  name\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  email\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  isActive\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> createUser\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">userData\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // TypeScript ensures I handle all required properties\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    id: userData.id,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    name: userData.name,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    email: userData.email,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    isActive: userData.isActive,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"week-3-generics\">Week 3: Generics\u003C/h3>\n\u003Cp>This was the hardest concept to wrap my head around, but once I got it, it opened up a whole new world of possibilities.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> createArray\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">T\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>(\u003C/span>\u003Cspan style=\"color:#FFAB70\">length\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">value\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> T\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> T\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[] {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#B392F0\"> Array\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(length).\u003C/span>\u003Cspan style=\"color:#B392F0\">fill\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(value);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Usage\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> stringArray\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> createArray\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hello\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> numberArray\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> createArray\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">42\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"-key-benefits-ive-discovered\">💡 Key Benefits I’ve Discovered\u003C/h2>\n\u003Ch3 id=\"1-better-ide-support\">1. \u003Cstrong>Better IDE Support\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>Autocomplete that actually works\u003C/li>\n\u003Cli>Refactoring tools that don’t break things\u003C/li>\n\u003Cli>Real-time error detection\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-self-documenting-code\">2. \u003Cstrong>Self-Documenting Code\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>Function signatures tell you exactly what they expect\u003C/li>\n\u003Cli>No more guessing what properties an object has\u003C/li>\n\u003Cli>Clear contracts between components\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-catch-bugs-early\">3. \u003Cstrong>Catch Bugs Early\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>Type errors at compile time instead of runtime\u003C/li>\n\u003Cli>Prevents common mistakes like typos in property names\u003C/li>\n\u003Cli>Ensures API contracts are followed\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-better-refactoring\">4. \u003Cstrong>Better Refactoring\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>Rename a property and TypeScript shows you everywhere it needs to be updated\u003C/li>\n\u003Cli>Change a function signature and get immediate feedback on all callers\u003C/li>\n\u003Cli>Confidence to make big changes without breaking things\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"️-practical-tips-for-beginners\">🛠️ Practical Tips for Beginners\u003C/h2>\n\u003Ch3 id=\"1-start-small\">1. \u003Cstrong>Start Small\u003C/strong>\u003C/h3>\n\u003Cp>Don’t try to convert your entire codebase at once. Start with new files or small modules.\u003C/p>\n\u003Ch3 id=\"2-use-any-sparingly\">2. \u003Cstrong>Use \u003Ccode>any\u003C/code> Sparingly\u003C/strong>\u003C/h3>\n\u003Cp>It’s tempting to use \u003Ccode>any\u003C/code> to bypass type errors, but it defeats the purpose. Use \u003Ccode>unknown\u003C/code> instead when you’re not sure of the type.\u003C/p>\n\u003Ch3 id=\"3-leverage-type-inference\">3. \u003Cstrong>Leverage Type Inference\u003C/strong>\u003C/h3>\n\u003Cp>TypeScript is smart enough to infer many types automatically. Don’t over-annotate.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Let TypeScript infer the return type\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">a\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">b\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> b; \u003C/span>\u003Cspan style=\"color:#6A737D\">// TypeScript knows this returns number\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-use-utility-types\">4. \u003Cstrong>Use Utility Types\u003C/strong>\u003C/h3>\n\u003Cp>TypeScript provides powerful utility types that can save you a lot of time:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">interface\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  id\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  name\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  email\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  password\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Create a type without the password field\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> PublicUser\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> Omit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"password\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Make all properties optional\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">type\u003C/span>\u003Cspan style=\"color:#B392F0\"> PartialUser\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> Partial\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"-integration-with-existing-projects\">🔧 Integration with Existing Projects\u003C/h2>\n\u003Ch3 id=\"gradual-migration-strategy\">Gradual Migration Strategy\u003C/h3>\n\u003Col>\n\u003Cli>\u003Cstrong>Enable TypeScript\u003C/strong> with \u003Ccode>allowJs: true\u003C/code> in \u003Ccode>tsconfig.json\u003C/code>\u003C/li>\n\u003Cli>\u003Cstrong>Rename files\u003C/strong> from \u003Ccode>.js\u003C/code> to \u003Ccode>.ts\u003C/code> one at a time\u003C/li>\n\u003Cli>\u003Cstrong>Add type annotations\u003C/strong> incrementally\u003C/li>\n\u003Cli>\u003Cstrong>Use JSDoc comments\u003C/strong> for existing JavaScript files\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"configuration-tips\">Configuration Tips\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"compilerOptions\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    \"strict\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    \"noImplicitAny\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    \"strictNullChecks\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    \"allowJs\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    \"checkJs\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"-results-after-3-months\">🎉 Results After 3 Months\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Bug reduction\u003C/strong>: ~70% fewer runtime errors\u003C/li>\n\u003Cli>\u003Cstrong>Development speed\u003C/strong>: Faster once I got used to the workflow\u003C/li>\n\u003Cli>\u003Cstrong>Code confidence\u003C/strong>: Much more comfortable making changes\u003C/li>\n\u003Cli>\u003Cstrong>Team collaboration\u003C/strong>: Easier to understand other people’s code\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"-next-steps\">🚀 Next Steps\u003C/h2>\n\u003Cp>I’m now exploring:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Advanced TypeScript patterns\u003C/strong> like conditional types\u003C/li>\n\u003Cli>\u003Cstrong>Framework integration\u003C/strong> with React, Vue, and Node.js\u003C/li>\n\u003Cli>\u003Cstrong>Performance optimization\u003C/strong> techniques\u003C/li>\n\u003Cli>\u003Cstrong>Testing strategies\u003C/strong> with typed test utilities\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"-final-thoughts\">💭 Final Thoughts\u003C/h2>\n\u003Cp>Learning TypeScript has been one of the best decisions I’ve made for my development career. The initial learning curve was steep, but the long-term benefits are enormous. It’s not just about catching bugs - it’s about writing better, more maintainable code.\u003C/p>\n\u003Cp>\u003Cstrong>If you’re on the fence about TypeScript, just start. You won’t regret it.\u003C/strong>\u003C/p>\n\u003Cp>The investment in learning TypeScript pays dividends every day I write code. It’s like having a super-smart pair programming partner that never gets tired and catches all the mistakes I might miss.\u003C/p>",{"headings":154,"localImagePaths":218,"remoteImagePaths":219,"frontmatter":220,"imagePaths":223},[155,158,161,164,167,170,173,176,179,182,185,188,191,194,197,200,203,206,209,212,215],{"depth":46,"slug":156,"text":157},"-why-typescript","🎯 Why TypeScript?",{"depth":46,"slug":159,"text":160},"-the-learning-curve","🚀 The Learning Curve",{"depth":53,"slug":162,"text":163},"week-1-basic-types","Week 1: Basic Types",{"depth":53,"slug":165,"text":166},"week-2-interfaces-and-types","Week 2: Interfaces and Types",{"depth":53,"slug":168,"text":169},"week-3-generics","Week 3: Generics",{"depth":46,"slug":171,"text":172},"-key-benefits-ive-discovered","💡 Key Benefits I’ve Discovered",{"depth":53,"slug":174,"text":175},"1-better-ide-support","1. Better IDE Support",{"depth":53,"slug":177,"text":178},"2-self-documenting-code","2. Self-Documenting Code",{"depth":53,"slug":180,"text":181},"3-catch-bugs-early","3. Catch Bugs Early",{"depth":53,"slug":183,"text":184},"4-better-refactoring","4. Better Refactoring",{"depth":46,"slug":186,"text":187},"️-practical-tips-for-beginners","🛠️ Practical Tips for Beginners",{"depth":53,"slug":189,"text":190},"1-start-small","1. Start Small",{"depth":53,"slug":192,"text":193},"2-use-any-sparingly","2. Use any Sparingly",{"depth":53,"slug":195,"text":196},"3-leverage-type-inference","3. Leverage Type Inference",{"depth":53,"slug":198,"text":199},"4-use-utility-types","4. Use Utility Types",{"depth":46,"slug":201,"text":202},"-integration-with-existing-projects","🔧 Integration with Existing Projects",{"depth":53,"slug":204,"text":205},"gradual-migration-strategy","Gradual Migration Strategy",{"depth":53,"slug":207,"text":208},"configuration-tips","Configuration Tips",{"depth":46,"slug":210,"text":211},"-results-after-3-months","🎉 Results After 3 Months",{"depth":46,"slug":213,"text":214},"-next-steps","🚀 Next Steps",{"depth":46,"slug":216,"text":217},"-final-thoughts","💭 Final Thoughts",[],[],{"title":138,"date":221,"description":140,"tags":222,"author":22,"featured":23,"category":147},["Date","2025-06-10T00:00:00.000Z"],[142,143,144,145,146],[],"code/learning-typescript-in-2025.md","life/who-pulled-the-breaker",{"id":225,"data":227,"body":239,"filePath":240,"digest":241,"rendered":242,"legacyId":252},{"title":228,"date":229,"description":230,"tags":231,"author":22,"featured":23,"category":238,"draft":26},"Who Pulled the Breaker?",["Date","2025-10-11T00:00:00.000Z"],"Midnight shifts, cold ramps, and keeping tired 727s flying at MSP in the mid-2000s",[232,233,234,235,236,237],"aviation","maintenance","MSP","aircraft","night-shift","727","life","The mid-2000s feel like another lifetime now — when Champion Air still flew vacation charters and Kevin, my partner in crime, and I were keeping tired 727s moving at MSP.\n\nYet another midnight shift on the cold ramp at Minneapolis–Saint Paul International Airport — or as we knew it, simply MSP. Third shift started at nine and, if we were lucky, ended around nine the next morning, but usually dragged closer to ten. The air smelled of jet fuel and exhaust, the kind of cold that made metal sting when you touched it.\n\nI started every night the same way — park outside the hangar, pull my collar up against the wind, and walk through the side door into the little office in back where the coffee pot hissed and the night's task sheets waited. The place always smelled like burnt grounds, cold air, and hydraulic fluid. That's where I grabbed my assignment and found out what kind of trouble I'd be babysitting till sunrise.\n\nKevin — or K-Dog, as everyone called him — was a farmer from International Falls, Minnesota. He had that mechanical sense you only get when things break forty miles from the nearest toolbox. Out in the fields, if a tractor quit, you didn't call for parts — you made it work with what you had. That mindset followed him onto the ramp. He lived on Mountain Dew and Copenhagen, swore at airplanes like they could hear him, and somehow kept them in the air. Give him a problem, a crescent wrench, and a bad idea, and he'd have that piece of shit running again before sunrise.\n\nThat night, we drew a 727-200 with an erratic fuel-flow issue — easy job, just messy as hell sometimes. We loaded the truck with toolboxes, a spare transmitter, and our standard survival kit — coffee strong enough to strip paint, a couple bottles of Mountain Dew, and enough smokes to fog the hangar. The dashboard was a mess of logbooks, menthol cigarettes, and empty Copenhagen cans sliding around as we bounced across the ramp toward the airplane.\n\nKevin killed the engine and popped the door.\n\n\"You grab the transmitter?\" he asked, already knowing I had.\n\n\"No, I left it at the hangar, dumbass,\" I shot back. \"Of course I grabbed it.\"\n\nHe just grinned — the kind of grin that said _same shit, different night_.\n\nThe talk was always rough, the kind of banter you'd hear in a kitchen at rush hour. Outsiders might've thought we hated each other, but it was the opposite. That back-and-forth was respect in our world, a bond built from too many long nights and close calls. You could trust a guy who'd call you an that would make a sailor blush and still hand you the wrench before you asked.\n\nWe hauled our toolboxes down, boots crunching on ice and grit, the smell of jet fuel thick enough to taste. Somewhere off in the distance an APU whined, a reminder that the rest of the airport was still alive and moving freight while we froze our asses off.\n\n**[To be continued...]**","src/content/blog/life/who-pulled-the-breaker.md","595284c792cf3495",{"html":243,"metadata":244},"\u003Cp>The mid-2000s feel like another lifetime now — when Champion Air still flew vacation charters and Kevin, my partner in crime, and I were keeping tired 727s moving at MSP.\u003C/p>\n\u003Cp>Yet another midnight shift on the cold ramp at Minneapolis–Saint Paul International Airport — or as we knew it, simply MSP. Third shift started at nine and, if we were lucky, ended around nine the next morning, but usually dragged closer to ten. The air smelled of jet fuel and exhaust, the kind of cold that made metal sting when you touched it.\u003C/p>\n\u003Cp>I started every night the same way — park outside the hangar, pull my collar up against the wind, and walk through the side door into the little office in back where the coffee pot hissed and the night’s task sheets waited. The place always smelled like burnt grounds, cold air, and hydraulic fluid. That’s where I grabbed my assignment and found out what kind of trouble I’d be babysitting till sunrise.\u003C/p>\n\u003Cp>Kevin — or K-Dog, as everyone called him — was a farmer from International Falls, Minnesota. He had that mechanical sense you only get when things break forty miles from the nearest toolbox. Out in the fields, if a tractor quit, you didn’t call for parts — you made it work with what you had. That mindset followed him onto the ramp. He lived on Mountain Dew and Copenhagen, swore at airplanes like they could hear him, and somehow kept them in the air. Give him a problem, a crescent wrench, and a bad idea, and he’d have that piece of shit running again before sunrise.\u003C/p>\n\u003Cp>That night, we drew a 727-200 with an erratic fuel-flow issue — easy job, just messy as hell sometimes. We loaded the truck with toolboxes, a spare transmitter, and our standard survival kit — coffee strong enough to strip paint, a couple bottles of Mountain Dew, and enough smokes to fog the hangar. The dashboard was a mess of logbooks, menthol cigarettes, and empty Copenhagen cans sliding around as we bounced across the ramp toward the airplane.\u003C/p>\n\u003Cp>Kevin killed the engine and popped the door.\u003C/p>\n\u003Cp>“You grab the transmitter?” he asked, already knowing I had.\u003C/p>\n\u003Cp>“No, I left it at the hangar, dumbass,” I shot back. “Of course I grabbed it.”\u003C/p>\n\u003Cp>He just grinned — the kind of grin that said \u003Cem>same shit, different night\u003C/em>.\u003C/p>\n\u003Cp>The talk was always rough, the kind of banter you’d hear in a kitchen at rush hour. Outsiders might’ve thought we hated each other, but it was the opposite. That back-and-forth was respect in our world, a bond built from too many long nights and close calls. You could trust a guy who’d call you an that would make a sailor blush and still hand you the wrench before you asked.\u003C/p>\n\u003Cp>We hauled our toolboxes down, boots crunching on ice and grit, the smell of jet fuel thick enough to taste. Somewhere off in the distance an APU whined, a reminder that the rest of the airport was still alive and moving freight while we froze our asses off.\u003C/p>\n\u003Cp>\u003Cstrong>[To be continued…]\u003C/strong>\u003C/p>",{"headings":245,"localImagePaths":246,"remoteImagePaths":247,"frontmatter":248,"imagePaths":251},[],[],[],{"title":228,"date":249,"description":230,"tags":250,"author":22,"featured":23,"category":238,"draft":26},["Date","2025-10-11T00:00:00.000Z"],[232,233,234,235,236,237],[],"life/who-pulled-the-breaker.md"]